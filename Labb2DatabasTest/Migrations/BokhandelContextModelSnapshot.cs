// <auto-generated />
using System;
using Labb2DatabasTest.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb2DatabasTest.Migrations
{
    [DbContext(typeof(BokhandelContext))]
    partial class BokhandelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FörfattareAvBok", b =>
                {
                    b.Property<int>("FörfattareId")
                        .HasColumnType("int");

                    b.Property<string>("Isbn13")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("char(13)")
                        .HasColumnName("ISBN13")
                        .IsFixedLength();

                    b.HasKey("FörfattareId", "Isbn13")
                        .HasName("PK__Författa__A3FE6D10AEB72B25");

                    b.HasIndex("Isbn13");

                    b.ToTable("FörfattareAvBok", (string)null);
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.Anställda", b =>
                {
                    b.Property<int>("AnställdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnställdId"));

                    b.Property<int>("ButikId")
                        .HasColumnType("int");

                    b.Property<int>("Lön")
                        .HasColumnType("int");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AnställdId")
                        .HasName("PK__Anställd__5FC8EAC26C88D841");

                    b.HasIndex("ButikId");

                    b.ToTable("Anställda");
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.Beställningar", b =>
                {
                    b.Property<int>("BeställningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeställningId"));

                    b.Property<int>("ButikId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentStatus")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateOnly>("Datum")
                        .HasColumnType("date");

                    b.Property<int>("KundId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPris")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("BeställningId")
                        .HasName("PK__Beställn__DB186291C266E76B");

                    b.HasIndex("ButikId");

                    b.HasIndex("KundId");

                    b.ToTable("Beställningar", (string)null);
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.BeställningsDetaljer", b =>
                {
                    b.Property<int>("BeställningsId")
                        .HasColumnType("int");

                    b.Property<string>("Isbn13")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("char(13)")
                        .HasColumnName("ISBN13")
                        .IsFixedLength();

                    b.Property<int>("Antal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("BeställningsId", "Isbn13")
                        .HasName("PK__Beställn__E02F222FDA8A314B");

                    b.HasIndex("Isbn13");

                    b.ToTable("BeställningsDetaljer", (string)null);
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.Butiker", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Butiksnamn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Hemsida")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Postnummer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Stad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Butiker__3214EC07C47ACC79");

                    b.ToTable("Butiker", (string)null);
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.Böcker", b =>
                {
                    b.Property<string>("Isbn13")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("char(13)")
                        .HasColumnName("ISBN13")
                        .IsFixedLength();

                    b.Property<decimal>("Pris")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Språk")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("Utgivardatum")
                        .HasColumnType("date");

                    b.HasKey("Isbn13")
                        .HasName("PK__Böcker__3BF79E03E4F677DE");

                    b.ToTable("Böcker", (string)null);
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.Författare", b =>
                {
                    b.Property<int>("FörfattareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FörfattareId"));

                    b.Property<string>("Efternamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("Födelsedatum")
                        .HasColumnType("date");

                    b.Property<string>("Förnamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FörfattareId")
                        .HasName("PK__Författa__804114F0018A9553");

                    b.ToTable("Författare", (string)null);
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.InfoPerButik", b =>
                {
                    b.Property<int>("AntalAnställda")
                        .HasColumnType("int")
                        .HasColumnName("Antal Anställda");

                    b.Property<int>("AntalOlikaBoktitlar")
                        .HasColumnType("int")
                        .HasColumnName("Antal Olika Boktitlar");

                    b.Property<string>("Butiksnamn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Stad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TotalLön")
                        .HasColumnType("int")
                        .HasColumnName("Total Lön");

                    b.Property<int>("TotaltAntalBöcker")
                        .HasColumnType("int")
                        .HasColumnName("Totalt Antal Böcker");

                    b.Property<int>("TotaltLagervärde")
                        .HasColumnType("int")
                        .HasColumnName("Totalt Lagervärde");

                    b.ToTable((string)null);

                    b.ToView("InfoPerButik", (string)null);
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.Kunder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Epost")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefonnummer")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id")
                        .HasName("PK__Kunder__3214EC076ADBE875");

                    b.HasIndex(new[] { "Epost" }, "UQ__Kunder__0CCE4D17E84043B1")
                        .IsUnique()
                        .HasFilter("[Epost] IS NOT NULL");

                    b.ToTable("Kunder", (string)null);
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.LagerSaldo", b =>
                {
                    b.Property<int>("ButikId")
                        .HasColumnType("int");

                    b.Property<string>("Isbn13")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("char(13)")
                        .HasColumnName("ISBN13")
                        .IsFixedLength();

                    b.Property<int>("AntalBöckerKvar")
                        .HasColumnType("int")
                        .HasColumnName("Antal Böcker Kvar");

                    b.HasKey("ButikId", "Isbn13")
                        .HasName("PK__LagerSal__9669127AACFF78B0");

                    b.HasIndex("Isbn13");

                    b.ToTable("LagerSaldo", (string)null);
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.Recensioner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Betyg")
                        .HasColumnType("int");

                    b.Property<string>("Isbn13")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("char(13)")
                        .HasColumnName("ISBN13")
                        .IsFixedLength();

                    b.Property<int>("KundId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Recensio__3214EC075F76C5A5");

                    b.HasIndex("Isbn13");

                    b.HasIndex("KundId");

                    b.ToTable("Recensioner", (string)null);
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.TitlarPerFörfattare", b =>
                {
                    b.Property<string>("Lagervärde")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasMaxLength(101)
                        .HasColumnType("nvarchar(101)");

                    b.Property<string>("Titlar")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Ålder")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.ToTable((string)null);

                    b.ToView("TitlarPerFörfattare", (string)null);
                });

            modelBuilder.Entity("FörfattareAvBok", b =>
                {
                    b.HasOne("Labb2DatabasTest.Model.Författare", null)
                        .WithMany()
                        .HasForeignKey("FörfattareId")
                        .IsRequired()
                        .HasConstraintName("FK__Författar__Förfa__79C80F94");

                    b.HasOne("Labb2DatabasTest.Model.Böcker", null)
                        .WithMany()
                        .HasForeignKey("Isbn13")
                        .IsRequired()
                        .HasConstraintName("FK__Författar__ISBN1__7ABC33CD");
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.Anställda", b =>
                {
                    b.HasOne("Labb2DatabasTest.Model.Butiker", "Butik")
                        .WithMany("Anställda")
                        .HasForeignKey("ButikId")
                        .IsRequired()
                        .HasConstraintName("FK__Anställda__Butik__1387E197");

                    b.Navigation("Butik");
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.Beställningar", b =>
                {
                    b.HasOne("Labb2DatabasTest.Model.Butiker", "Butik")
                        .WithMany("Beställningars")
                        .HasForeignKey("ButikId")
                        .IsRequired()
                        .HasConstraintName("FK__Beställni__Butik__05F8DC4F");

                    b.HasOne("Labb2DatabasTest.Model.Kunder", "Kund")
                        .WithMany("Beställningars")
                        .HasForeignKey("KundId")
                        .IsRequired()
                        .HasConstraintName("FK__Beställni__KundI__0504B816");

                    b.Navigation("Butik");

                    b.Navigation("Kund");
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.BeställningsDetaljer", b =>
                {
                    b.HasOne("Labb2DatabasTest.Model.Beställningar", "Beställnings")
                        .WithMany("BeställningsDetaljers")
                        .HasForeignKey("BeställningsId")
                        .IsRequired()
                        .HasConstraintName("FK__Beställni__Order__09C96D33");

                    b.HasOne("Labb2DatabasTest.Model.Böcker", "Isbn13Navigation")
                        .WithMany("BeställningsDetaljers")
                        .HasForeignKey("Isbn13")
                        .IsRequired()
                        .HasConstraintName("FK__Beställni__ISBN1__0ABD916C");

                    b.Navigation("Beställnings");

                    b.Navigation("Isbn13Navigation");
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.LagerSaldo", b =>
                {
                    b.HasOne("Labb2DatabasTest.Model.Butiker", "Butik")
                        .WithMany("LagerSaldos")
                        .HasForeignKey("ButikId")
                        .IsRequired()
                        .HasConstraintName("FK_LagerSaldo_Butiker");

                    b.HasOne("Labb2DatabasTest.Model.Böcker", "Bok")
                        .WithMany("LagerSaldos")
                        .HasForeignKey("Isbn13")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bok");

                    b.Navigation("Butik");
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.Recensioner", b =>
                {
                    b.HasOne("Labb2DatabasTest.Model.Böcker", "Isbn13Navigation")
                        .WithMany("Recensioners")
                        .HasForeignKey("Isbn13")
                        .IsRequired()
                        .HasConstraintName("FK__Recension__ISBN1__4460231C");

                    b.HasOne("Labb2DatabasTest.Model.Kunder", "Kund")
                        .WithMany("Recensioners")
                        .HasForeignKey("KundId")
                        .IsRequired()
                        .HasConstraintName("FK__Recension__KundI__436BFEE3");

                    b.Navigation("Isbn13Navigation");

                    b.Navigation("Kund");
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.Beställningar", b =>
                {
                    b.Navigation("BeställningsDetaljers");
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.Butiker", b =>
                {
                    b.Navigation("Anställda");

                    b.Navigation("Beställningars");

                    b.Navigation("LagerSaldos");
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.Böcker", b =>
                {
                    b.Navigation("BeställningsDetaljers");

                    b.Navigation("LagerSaldos");

                    b.Navigation("Recensioners");
                });

            modelBuilder.Entity("Labb2DatabasTest.Model.Kunder", b =>
                {
                    b.Navigation("Beställningars");

                    b.Navigation("Recensioners");
                });
#pragma warning restore 612, 618
        }
    }
}
